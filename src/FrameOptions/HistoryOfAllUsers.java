/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrameOptions;

import FrameMenus.AdminMenu;
import Utilities.FillTable;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author kcfke
 */
public class HistoryOfAllUsers extends javax.swing.JFrame {

    /**
     * Creates new form HistoryOfAllUsers
     */
    public HistoryOfAllUsers(String admin) {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        welcomeLabel.setText("Hi, " + admin);
        
        
        try {
            //Connecting to the database
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/users", "root", "root");
            /**
             * This query will collect the information to be displayed in our
             * list.
             */
            String calculations = "SELECT calculator.equation1 as 'Equation 1', calculator.equation2 as 'Equation 2', "
                    + "calculator.equation3 as 'Equation 3', calculator.results as Result, users.username as 'Performed by' "
                    + "from calculator inner join users on calculator.iduser=users.iduser order by users.username asc, "
                    + "equation3 desc;";

            PreparedStatement pst = con.prepareStatement(calculations);
            pst.execute();
            /**
             * Using FillTable to create this table and display the list of
             * users.
             */
            FillTable.FillTable(historyOfUsersCalculations, calculations);
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        historyOfUsersCalculations = new javax.swing.JTable();
        welcomeLabel = new javax.swing.JLabel();
        listLabel = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        backRegister1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        historyOfUsersCalculations.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        historyOfUsersCalculations.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        historyOfUsersCalculations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equation 1", "Equation 2", "Equation 3", "Result", "Perfomed by User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        historyOfUsersCalculations.setGridColor(new java.awt.Color(255, 102, 102));
        historyOfUsersCalculations.setRowHeight(25);
        historyOfUsersCalculations.setRowMargin(4);
        historyOfUsersCalculations.setSelectionBackground(new java.awt.Color(204, 204, 204));
        historyOfUsersCalculations.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(historyOfUsersCalculations);

        welcomeLabel.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLabel.setText("Hi");

        listLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        listLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listLabel.setText("History of Calculations");

        title.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Function Calculator");
        title.setAlignmentY(0.0F);

        backRegister1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backRegister1.setText("BACK");
        backRegister1.setAlignmentY(0.0F);
        backRegister1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backRegister1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1225, Short.MAX_VALUE)
            .addComponent(listLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(welcomeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(542, 542, 542)
                .addComponent(backRegister1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(title)
                .addGap(18, 18, 18)
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(backRegister1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backRegister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backRegister1ActionPerformed
        /**
        * Back button will take the user back to its menu and dispose of the
        * Listing menu. It will also give the name of the Username as a
        * parameter to be used in the greeting label.
        */
        AdminMenu menu = new AdminMenu(welcomeLabel.getText().substring(4).trim());
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_backRegister1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backRegister1;
    private javax.swing.JTable historyOfUsersCalculations;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel listLabel;
    private javax.swing.JLabel title;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
